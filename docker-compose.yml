version: '3.8'
services:

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - 8000:8000
      - 9443:9443
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    command: --http-enabled

  proxy-manager:
    container_name: proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./proxy-manager/data:/data
      - ./proxy-manager/letsencrypt:/etc/letsencrypt
    #logging:
     # driver: fluentd
      #options:
       # fluentd-address: 192.16.0.20:24224

  adguard-home:
    container_name: adguard-home
    image: adguard/adguardhome
    restart: unless-stopped
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '84:80/tcp'
      - '853:853/tcp'
      - '784:784/udp'
      - '853:853/udp'
      - '8853:8853/udp'
      - '5443:5443/tcp'
      - '5443:5443/udp'
    volumes:
      - ./adguard-home/work/:/opt/adguardhome/work
      - ./adguard-home/conf/:/opt/adguardhome/conf
    #logging:
     # driver: fluentd
      #options:
       # fluentd-address: 192.16.0.20:24224

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: '1000:1000'
    #ports:
     # - '3000:3000'
    # adding the mount volume point which we create earlier
    volumes:
      - '$PWD/grafana-data:/var/lib/grafana'

  uptime:
    image: louislam/uptime-kuma
    container_name: uptime_kuma
    restart: unless-stopped
    #ports:
      #- '3001:3001'
    volumes:
      - '$PWD/uptime-kuma:/app/data'
    #logging:
     # driver: fluentd
      #options:
       # fluentd-address: 192.16.0.20:24224

  samba:
    container_name: samba
    image: dperson/samba # no hay tag con versiones, solo latest
    restart: always
    command: '-u "gumonet;Gumonet01" -s "backup;/backup;yes;no" -s "data;/data;yes;no" '
    stdin_open: true
    tty: true
    environment:
      - TZ=America/Mexico_City
    volumes:
      - ~/Backup:/backup
      - ~/Data:/data
    ports:
      - 139:139
      - 445:445
    #logging:
     # driver: fluentd
      #options:
       # fluentd-address: 192.16.0.20:24224

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    expose:
      - 9090
    volumes:
      - $PWD/prometheus:/etc/prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    expose:
      - "8080"

  #node_exporter:
  #  image: quay.io/prometheus/node-exporter:latest
  #  container_name: node_exporter
  #  command:
  #    - '--path.rootfs=/host'
  #  pid: host
  #  restart: unless-stopped
  #  volumes:
  #    - '/:/host:ro,rslave'
    #ports:
     # - "9100:9100"
  #  expose:
  #    - 9100

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    container_name: fluent-bit
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  loki:
    image: grafana/loki:latest
    container_name: loki
    expose:
      - "3100"
    ports:
      - "3200:3100"

#  app:
#    image: thakkaryash94/express-example:latest
#    container_name: express-app
#    ports:
#      - "4000:3000"
#    logging:
#      driver: fluentd
#      options:
#        fluentd-address: 192.16.0.20:24224

