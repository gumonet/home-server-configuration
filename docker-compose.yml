services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    ports:
      - 8000:8000
      - 9443:9443
      - 9001:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    command: --http-enabled
    networks:
      - homelab

  proxy-manager:
    container_name: proxy-manager
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - proxy-manager-data:/data
      - proxy-manager-letsencrypt:/etc/letsencrypt
    networks:
      - homelab

  adguard-home:
    container_name: adguard-home
    image: adguard/adguardhome
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "85:85/tcp"
      - "853:853/tcp"
      - "784:784/udp"
      - "853:853/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5443/udp"
      - "3000:3000"
    volumes:
      - adguard-home:/opt/adguardhome/
    networks:
      - homelab

  samba:
    container_name: samba
    image: dperson/samba # no hay tag con versiones, solo latest
    restart: unless-stopped
    command: '-u "gumonet;Gumonet01" -s "media;/media;yes;no" '
    #command: '-u "gumonet;Gumonet01" -s "backup;/backup;yes;no" -s "data;/data;yes;no" '
    stdin_open: true
    tty: true
    environment:
      - TZ=America/Mexico_City
    volumes:
      #- ~/Backup:/backup
      #- ~/Data:/data
      - /home/gumonet/Media:/media
    ports:
      - 139:139
      - 445:445
    networks:
      - homelab

  registry:
    image: registry:latest
    container_name: registry
    restart: unless-stopped
    environment:
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin=["*"]
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods=["HEAD,GET,OPTIONS,DELETE"]
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials=["true"]
      - REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers=["Authorization,Accept,Cache-Control"]
      - REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers=["Docker-Content-Digest"]
      - REGISTRY_STORAGE_DELETE_ENABLED=["true"]
    ports:
      - "5000:5000"
    volumes:
      - registry:/var/lib/registry
    networks:
      - homelab

  registry-ui:
    image: joxit/docker-registry-ui:latest
    ports:
      - "8088:80"
    container_name: registry-ui
    environment:
      - REGISTRY_TITLE=Local Docker Registry
      - REGISTRY_URL=http://192.16.0.20:5000
      - SINGLE_REGISTRY=true
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MAX_BRANCHES=1
      - CATALOG_MIN_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    depends_on:
      - registry
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # API S3-compatible
      - "9002:9001" # Web UI
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER} # Cambia esto en producción
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD} # Cambia esto en producción
    command: server --console-address ":9001" /data
    restart: unless-stopped
    networks:
      - homelab

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # Cambia esto en producción
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Cambia esto en producción
      POSTGRES_DB: ${POSTGRES_DB} # Cambia esto en producción
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - homelab
    ports:
      - "5432:5432"

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      DB_TYPE: postgres
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}

      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: adminpass

      N8N_HOST: n8n.home
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://n8n.home:5678
      N8N_SECURE_COOKIE: false

      TZ: America/Mexico_City

    depends_on:
      - postgres
    networks:
      - homelab
    volumes:
      - n8n_data:/home/node/.n8n

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    restart: always
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - gitea:/data
    ports:
      - "3002:3000" # Web
      - "2222:22" # SSH Git
    networks:
      - homelab

  transmission:
    container_name: transmission
    image: jaymoulin/transmission:3.00-1.6.1
    command: transmission-daemon -f -g /config
    volumes:
      - ./transmission/settings.json:/config/settings.json
      - ${STORAGE}/torrents:/downloads
      - transmission:/config
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    expose:
      - 9091
    restart: unless-stopped
    networks:
      - homelab

  flexget:
    container_name: flexget
    image: wiserain/flexget:3.5
    volumes:
      - ./flexget/config.yaml:/config/config.yaml
      - ./flexget/config-trakt.yaml:/config/config-trakt.yaml
      - ./flexget/custom-cont-init.d:/custom-cont-init.d
      - ${STORAGE}/torrents:/downloads
      - ${MEDIA}:/storage
      - flexget:/config
    ports:
      - 5050:5050
    environment:
      - PUID=1000
      - PGID=1000
      - TORRENT_PLUGIN=transmission
      - FG_WEBUI_PASSWD=@Gumonet01 # la puedes cambiar por la que quieras
    restart: unless-stopped
    networks:
      - homelab

networks:
  homelab:
    external: true

volumes:
  portainer_data:
  proxy-manager-data:
  proxy-manager-letsencrypt:
  adguard-home:
  registry:
  minio-data:
  pgdata:
  n8n_data:
  gitea:
  flexget:
  transmission:
